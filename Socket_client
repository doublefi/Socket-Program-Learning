#include <stdio.h>
#include <stdlib.h>
#include <WinSock2.h>
#include <WS2tcpip.h>
#pragma comment(lib, "ws2_32.lib")  //加载 ws2_32.dll
#define BUF_SIZE 100
#define _WINSOCK_DEPRECATED_NO_WARNINGS
int main() {
	//初始化DLL
	WSADATA wsaData;
	WSAStartup(MAKEWORD(2, 2), &wsaData);
	//创建套接字
	SOCKET clntSock = socket(PF_INET, SOCK_STREAM, 0);
	//向服务器发起请求
	sockaddr_in sockAddr;
	memset(&sockAddr, 0, sizeof(sockAddr));  //每个字节都用0填充
	sockAddr.sin_family = PF_INET;
	sockAddr.sin_addr.s_addr = inet_addr("127.0.0.1");
	//sockAddr.sin_addr.s_addr = inet_pton(PF_INET, "127.0.0.1", (void*)&sockAddr.sin_addr.S_un.S_addr);


	sockAddr.sin_port = htons(1234);
	char bufSend[BUF_SIZE] = { 0 };
	char bufRecv[BUF_SIZE] = { 0 };
	while (1)
	{
		SOCKET sock = socket(PF_INET, SOCK_STREAM, IPPROTO_TCP);
		connect(clntSock, (SOCKADDR*)& sockAddr, sizeof(SOCKADDR));

		//char bufSend[BUF_SIZE] = { 0 };
		printf("Input a string: ");
		gets_s(bufSend);
		send(clntSock, bufSend, strlen(bufSend), 0);

		//接收服务器传回的数据
		//char szBuffer[MAXBYTE] = { 0 };
		//recv(clntSock, szBuffer, MAXBYTE, NULL);

		//char bufRecv[BUF_SIZE] = { 0 };
		recv(clntSock, bufRecv, BUF_SIZE, 0);

		//输出接收到的数据
		printf("Message form server: %s\n", bufRecv);
		memset(bufSend, 0, BUF_SIZE);  //重置缓冲区
		memset(bufRecv, 0, BUF_SIZE);  //重置缓冲区

		//关闭套接字

		closesocket(clntSock);
	}
	//终止使用 DLL
	WSACleanup();
	
	system("pause");
	return 0;
}
