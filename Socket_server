#include <stdio.h>
#include <winsock2.h>
#include <WS2tcpip.h>
#include <stdlib.h>
#pragma comment (lib, "ws2_32.lib")  //加载 ws2_32.dll
#define BUF_SIZE 100

int main() {
	//初始化 DLL
	WSADATA wsaData;
	WSAStartup(MAKEWORD(2, 2), &wsaData);
	//创建套接字
	//SOCKET servSock = socket(PF_INET, SOCK_STREAM, IPPROTO_TCP);
	SOCKET servSock = socket(PF_INET, SOCK_STREAM, 0);

	//绑定套接字
	sockaddr_in sockAddr;
	memset(&sockAddr, 0, sizeof(sockAddr));  //每个字节都用0填充
	sockAddr.sin_family = PF_INET;  //使用IPv4地址
	
									
	sockAddr.sin_addr.s_addr = inet_addr("127.0.0.1");  //具体的IP地址
	//sockAddr.sin_addr.s_addr = inet_pton(PF_INET, "127.0.0.1", (void*)& sockAddr.sin_addr.S_un.S_addr);

	sockAddr.sin_port = htons(1234);  //端口
	
    //分配一个套接口与本地ip绑定在一起，含新定义的套接口名称，和存储单元大小
	bind(servSock, (SOCKADDR*)&sockAddr, sizeof(SOCKADDR));
	
	
	//进入监听状态
	listen(servSock, 20);

	//接收客户端请求
	SOCKADDR clntAddr;
	int nSize = sizeof(SOCKADDR);
	//SOCKET clntSock = accept(servSock, (SOCKADDR*)&clntAddr, &nSize);

	//向客户端发送数据
	//char str[] = "Hello World!";
	//send(clntSock, str, strlen(str) + sizeof(char), NULL);

	char buffer[BUF_SIZE];

	while (1)
	{
		SOCKET clntSock = accept(servSock, (SOCKADDR*)& clntAddr, &nSize);
		int strLen = recv(clntSock, buffer, BUF_SIZE, 0); //接收客户端发来的数据
		send(clntSock, buffer, strLen, 0);  //将数据原样返回


		//关闭套接字

		closesocket(clntSock);
		memset(buffer, 0, BUF_SIZE);  //重置缓冲区
	}
	closesocket(servSock);
	//终止 DLL 的使用
	WSACleanup();
	system("pause");
	return 0;
}
